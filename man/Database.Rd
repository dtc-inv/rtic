% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Database.R
\name{Database}
\alias{Database}
\title{Database Object}
\description{
Download and store holdings and price time-series data in s3 from various
  sources such as factset, blackdiamond, excel
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_keys}}{of api keys}

\item{\code{ac}}{ArcticDB object store}

\item{\code{tbl_msl}}{master security list: table of meta data for all 
investments}

\item{\code{tbl_cust}}{custodian list: table of meta data for CTFs and SMAs}

\item{\code{tbl_sec}}{SEC list: table of meta data for mutual funds and ETFs}

\item{\code{tbl_xl_mod}}{excel model list: table of meta data for model 
portfolios}

\item{\code{tbl_hold_field}}{holdings fields: table of fields / columns for
holdings data}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Database-new}{\code{Database$new()}}
\item \href{#method-Database-check_api_keys}{\code{Database$check_api_keys()}}
\item \href{#method-Database-read_msl_xl}{\code{Database$read_msl_xl()}}
\item \href{#method-Database-write_msl}{\code{Database$write_msl()}}
\item \href{#method-Database-write_sec}{\code{Database$write_sec()}}
\item \href{#method-Database-write_cust}{\code{Database$write_cust()}}
\item \href{#method-Database-add_asset}{\code{Database$add_asset()}}
\item \href{#method-Database-ret_index}{\code{Database$ret_index()}}
\item \href{#method-Database-ret_etf}{\code{Database$ret_etf()}}
\item \href{#method-Database-ret_mutual_fund}{\code{Database$ret_mutual_fund()}}
\item \href{#method-Database-ret_private_index}{\code{Database$ret_private_index()}}
\item \href{#method-Database-ret_ctf_monthly}{\code{Database$ret_ctf_monthly()}}
\item \href{#method-Database-ret_ctf_daily_hold}{\code{Database$ret_ctf_daily_hold()}}
\item \href{#method-Database-ret_ctf_daily}{\code{Database$ret_ctf_daily()}}
\item \href{#method-Database-ret_ctf_daily_adj}{\code{Database$ret_ctf_daily_adj()}}
\item \href{#method-Database-ret_workup}{\code{Database$ret_workup()}}
\item \href{#method-Database-ret_backfill}{\code{Database$ret_backfill()}}
\item \href{#method-Database-run_backfill}{\code{Database$run_backfill()}}
\item \href{#method-Database-ret_model}{\code{Database$ret_model()}}
\item \href{#method-Database-ret_stock}{\code{Database$ret_stock()}}
\item \href{#method-Database-ret_hfr_index}{\code{Database$ret_hfr_index()}}
\item \href{#method-Database-ret_function}{\code{Database$ret_function()}}
\item \href{#method-Database-ret_fred}{\code{Database$ret_fred()}}
\item \href{#method-Database-read_ret}{\code{Database$read_ret()}}
\item \href{#method-Database-hold_sec}{\code{Database$hold_sec()}}
\item \href{#method-Database-hold_cust}{\code{Database$hold_cust()}}
\item \href{#method-Database-hold_cust_backfill}{\code{Database$hold_cust_backfill()}}
\item \href{#method-Database-hold_model}{\code{Database$hold_model()}}
\item \href{#method-Database-hold_ctf}{\code{Database$hold_ctf()}}
\item \href{#method-Database-hold_ctf_backfill}{\code{Database$hold_ctf_backfill()}}
\item \href{#method-Database-read_hold}{\code{Database$read_hold()}}
\item \href{#method-Database-download_fundamental_data}{\code{Database$download_fundamental_data()}}
\item \href{#method-Database-download_sectors}{\code{Database$download_sectors()}}
\item \href{#method-Database-update_ps_macro_select}{\code{Database$update_ps_macro_select()}}
\item \href{#method-Database-create_port}{\code{Database$create_port()}}
\item \href{#method-Database-create_port_from_ids}{\code{Database$create_port_from_ids()}}
\item \href{#method-Database-clone}{\code{Database$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-new"></a>}}
\if{latex}{\out{\hypertarget{method-Database-new}{}}}
\subsection{Method \code{new()}}{
Create a db object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$new(api_keys, py_loc = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_keys}}{list of api keys or `.RData` file location to load the 
list of keys}

\item{\code{py_loc}}{optional file path where python is installed to be used
with `reticulate`}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-check_api_keys"></a>}}
\if{latex}{\out{\hypertarget{method-Database-check_api_keys}{}}}
\subsection{Method \code{check_api_keys()}}{
Check if api keys are properly specified
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$check_api_keys(api_keys)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_keys}}{list of api_keys}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-read_msl_xl"></a>}}
\if{latex}{\out{\hypertarget{method-Database-read_msl_xl}{}}}
\subsection{Method \code{read_msl_xl()}}{
Read MSL from Excel
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$read_msl_xl(wb = "N:/Investment Team/DATABASES/CustomRet/msl.xlsx")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wb}}{excel file full path}

\item{\code{write}}{boolean to overwrite MSL in database, default FALSE}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-write_msl"></a>}}
\if{latex}{\out{\hypertarget{method-Database-write_msl}{}}}
\subsection{Method \code{write_msl()}}{
write MSL to database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$write_msl(tbl_msl)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-write_sec"></a>}}
\if{latex}{\out{\hypertarget{method-Database-write_sec}{}}}
\subsection{Method \code{write_sec()}}{
write SEC table to database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$write_sec()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-write_cust"></a>}}
\if{latex}{\out{\hypertarget{method-Database-write_cust}{}}}
\subsection{Method \code{write_cust()}}{
write Custodian table to database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$write_cust()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-add_asset"></a>}}
\if{latex}{\out{\hypertarget{method-Database-add_asset}{}}}
\subsection{Method \code{add_asset()}}{
Add an asset to the MSL and other meta tables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$add_asset(
  dtc_name,
  id,
  id_type,
  layer,
  sec_type,
  ret_lib = NA,
  hold_tbl = NA,
  short_cik = NA,
  long_cik = NA,
  bd_acct_id = NA
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtc_name}}{DtcName field}

\item{\code{id}}{Ticker, Cusip, Sedol, Isin, Lei, or Identifier}

\item{\code{id_type}}{specify which kind of id (above)}

\item{\code{layer}}{1 = lowest no holdings, 2 fund manager, 3 asset class, etc}

\item{\code{sec_type}}{security type, e.g., etf, mutual-fund, index}

\item{\code{ret_lib}}{return library name}

\item{\code{hold_tbl}}{table with holdings (for models)}

\item{\code{short_cik}}{if SEC holding, parent company CIK, otherwise leave NA}

\item{\code{long_cik}}{if SEC holding, shareclass CIK, otherwise leave NA}

\item{\code{bd_acct_id}}{if SMA black diamond account id, otherwise leave NA}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_index"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_index}{}}}
\subsection{Method \code{ret_index()}}{
Update index returns from Factset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_index(ids = NULL, t_minus_m = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{leave NULL to update all indexes, or enter specific index
ids to update, note ids will have to first exist in the Master Security
List `tbl_msl`}

\item{\code{t_minus_m}}{how many months to download}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_etf"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_etf}{}}}
\subsection{Method \code{ret_etf()}}{
Update ETF returns from Factset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_etf(ids = NULL, date_start = NULL, date_end = Sys.Date() - 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{leave `NULL` to udpate all ETFs in the Master Security List,
or enter a vector to only update specific ETFs}

\item{\code{date_start}}{beginning date for update, if left `NULL` will
default to the last date of the existing data}

\item{\code{date_end}}{ending date for update, by default is yesterday}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_mutual_fund"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_mutual_fund}{}}}
\subsection{Method \code{ret_mutual_fund()}}{
Update index returns from Factset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_mutual_fund(ids = NULL, days_back = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{leave NULL to update all mutual funds, or enter specific
mutual fund, note if ids are entered they must be in the MSL}

\item{\code{days_back}}{how many days to download}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_private_index"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_private_index}{}}}
\subsection{Method \code{ret_private_index()}}{
Update Private Asset Indexes from Excel
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_private_index()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_ctf_monthly"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_ctf_monthly}{}}}
\subsection{Method \code{ret_ctf_monthly()}}{
Update CTF Returns from Factset
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_ctf_monthly(t_minus_m = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{t_minus_m}}{integer to indicate how many months back to download new
data from}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_ctf_daily_hold"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_ctf_daily_hold}{}}}
\subsection{Method \code{ret_ctf_daily_hold()}}{
Update daily estimates based on holdings x returns
meant for short periods use xxx function for backfill
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_ctf_daily_hold(
  dtc_name = NULL,
  date_start = NULL,
  date_end = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_ctf_daily"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_ctf_daily}{}}}
\subsection{Method \code{ret_ctf_daily()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_ctf_daily(t_minus_m = 1)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_ctf_daily_adj"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_ctf_daily_adj}{}}}
\subsection{Method \code{ret_ctf_daily_adj()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_ctf_daily_adj()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_workup"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_workup}{}}}
\subsection{Method \code{ret_workup()}}{
read in manually uploaded returns from Excel
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_workup(
  xl_file = "N:/Investment Team/DATABASES/CustomRet/workup.xlsx"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{xl_file}}{full file path of excel workbook}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_backfill"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_backfill}{}}}
\subsection{Method \code{ret_backfill()}}{
read in returns to backfill daily and monthly returns
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_backfill()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-run_backfill"></a>}}
\if{latex}{\out{\hypertarget{method-Database-run_backfill}{}}}
\subsection{Method \code{run_backfill()}}{
execute backfill
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$run_backfill()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtc_name}}{name of return to backfill}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_model"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_model}{}}}
\subsection{Method \code{ret_model()}}{
Update returns of models
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_model(dtc_name = NULL, months_back = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtc_name}}{option to specify specific models to update, leave NULL
  to update all models
HFRI Return index from csv file}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_stock"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_stock}{}}}
\subsection{Method \code{ret_stock()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_stock(
  ids = NULL,
  date_start = NULL,
  date_end = Sys.Date(),
  freq = "D",
  geo = c("us", "intl")
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_hfr_index"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_hfr_index}{}}}
\subsection{Method \code{ret_hfr_index()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_hfr_index(file_nm)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_function"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_function}{}}}
\subsection{Method \code{ret_function()}}{
Update returns that require computational changes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_function()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-ret_fred"></a>}}
\if{latex}{\out{\hypertarget{method-Database-ret_fred}{}}}
\subsection{Method \code{ret_fred()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$ret_fred()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-read_ret"></a>}}
\if{latex}{\out{\hypertarget{method-Database-read_ret}{}}}
\subsection{Method \code{read_ret()}}{
Read Returns by ids
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$read_ret(ids)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{ids to read in, search in order of Ticker, Cusip, Sedol,
Lei, DtcName, Identifier}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If any returns are pulled from a monthly return library, e.g., CTF
official returns, then all returns pinged will be converted to monthly
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-hold_sec"></a>}}
\if{latex}{\out{\hypertarget{method-Database-hold_sec}{}}}
\subsection{Method \code{hold_sec()}}{
Download holdings from SEC EDGAR Database
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$hold_sec(
  dtc_name = NULL,
  user_email = "asotolongo@diversifiedtrust.com",
  save_to_db = TRUE,
  return_data = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtc_name}}{leave `NULL` to download all, or enter a vector of
dtc_names to download specific funds}

\item{\code{user_email}}{need to provide an email address to download}

\item{\code{save_to_db}}{save data to DTC's database}

\item{\code{return_data}}{return data.frame of holdings}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-hold_cust"></a>}}
\if{latex}{\out{\hypertarget{method-Database-hold_cust}{}}}
\subsection{Method \code{hold_cust()}}{
Download account data from custodian, currently done via
  BlackDiamond
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$hold_cust(
  dtc_name = NULL,
  save_to_db = TRUE,
  return_data = FALSE,
  as_of = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtc_name}}{leave `NULL` to download all, or enter a vector of
dtc_names to download specific funds}

\item{\code{save_to_db}}{save data to DTC's database}

\item{\code{return_data}}{return data.frame of holdings}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-hold_cust_backfill"></a>}}
\if{latex}{\out{\hypertarget{method-Database-hold_cust_backfill}{}}}
\subsection{Method \code{hold_cust_backfill()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$hold_cust_backfill(
  dtc_name,
  date_start = NULL,
  date_end = NULL,
  freq = "days",
  save_to_db = TRUE,
  return_data = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-hold_model"></a>}}
\if{latex}{\out{\hypertarget{method-Database-hold_model}{}}}
\subsection{Method \code{hold_model()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$hold_model(dtc_name, tbl_hold = NULL, xl_file = NULL, sum_to_1 = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-hold_ctf"></a>}}
\if{latex}{\out{\hypertarget{method-Database-hold_ctf}{}}}
\subsection{Method \code{hold_ctf()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$hold_ctf(
  dtc_name = NULL,
  as_of = NULL,
  save_to_db = TRUE,
  return_data = FALSE,
  download_ctf = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-hold_ctf_backfill"></a>}}
\if{latex}{\out{\hypertarget{method-Database-hold_ctf_backfill}{}}}
\subsection{Method \code{hold_ctf_backfill()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$hold_ctf_backfill(dtc_name = NULL, combo = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-read_hold"></a>}}
\if{latex}{\out{\hypertarget{method-Database-read_hold}{}}}
\subsection{Method \code{read_hold()}}{
Read Holdings Data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$read_hold(dtc_name, latest = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtc_name}}{DtcName field in MSL to pull holdings}

\item{\code{latest}}{option to truncate to most recent holdings}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-download_fundamental_data"></a>}}
\if{latex}{\out{\hypertarget{method-Database-download_fundamental_data}{}}}
\subsection{Method \code{download_fundamental_data()}}{
Download equity financial data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$download_fundamental_data(
  ids = NULL,
  yrs_back = 1,
  dtype = c("PE", "PB", "PFCF", "DY", "ROE", "MCAP")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{leave `NULL` to get for all stocks, or enter specific ids}

\item{\code{yrs_back}}{how many years of data to pull}

\item{\code{dtype}}{data type: one of PE, PB, PFCF, DY, ROE, and MCAP}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-download_sectors"></a>}}
\if{latex}{\out{\hypertarget{method-Database-download_sectors}{}}}
\subsection{Method \code{download_sectors()}}{
Download Sector Data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$download_sectors(ids = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{specify ids or leave `NULL` to gather for all stocks in MSL}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Sector data are gathered from Factset, mapped to GICS, and from 
Piper Sandler Macro Downloads
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-update_ps_macro_select"></a>}}
\if{latex}{\out{\hypertarget{method-Database-update_ps_macro_select}{}}}
\subsection{Method \code{update_ps_macro_select()}}{
Download Macro Select Workbook and Save to Library
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$update_ps_macro_select(wb, is_us = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{wb}}{file location of workbook}

\item{\code{is_us}}{TRUE for Russell 3000, FALSE for MSCI ACWI}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-create_port"></a>}}
\if{latex}{\out{\hypertarget{method-Database-create_port}{}}}
\subsection{Method \code{create_port()}}{
Create Portfolio from DtcName (holdings table)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$create_port(dtc_name, latest = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dtc_name}}{DtcName}

\item{\code{latest}}{truncate holdings to last update, default is FALSE for 
entire time-series of holdings}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-create_port_from_ids"></a>}}
\if{latex}{\out{\hypertarget{method-Database-create_port_from_ids}{}}}
\subsection{Method \code{create_port_from_ids()}}{
Create Portfolio from ids (quick set up)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$create_port_from_ids(
  ids,
  wgt = NULL,
  incept = NULL,
  name = NULL,
  tr_id = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ids}}{Ticker, Cusip, Sedol, etc}

\item{\code{wgt}}{optional vector of corresponding weights, default is 1/n}

\item{\code{name}}{optional string to name portfolio}

\item{\code{tr_id}}{optional string for id to pull track record, default will
be rebalance of weights and returns from ids}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Database-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Database-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Database$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
